/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NUM 1
#define FUNC 2
#define SYS 3

/ {
        conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM FUNC>;
            then-layer = <SYS>;
         };
        };

        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          }; 
        };
        
        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        label = "BASE";
// -----------------------------------------------------------------------------------------
// |  TAB      |  Q  |  W  |  F  |  P  |    G    |   |    J    |  L   |  U  |  Y  |  ;  |  ESC    |
// | CTRL/CAPS |  A  |  R  |  S  |  T  |    D    |   |    H    |  N   |  E  |  I  |  O  | RCTRL/' |
// | SHFT      |  Z  |  X  |  C  |  V  |    B    |   |    K    |  M   |  ,  |  .  |  /  | RSHFT   |
//                         | GUI | LWR | ALT/ENT |   | ALT/SPC | BKSP | RSE |
                        bindings = <
   &kp TAB        &kp Q &kp W &kp F    &kp P   &kp G         &kp J           &kp L    &kp U     &kp Y   &kp SEMI    &kp ESC
   &tp LCTRL CAPS &kp A &kp R &kp S    &kp T   &kp D         &kp H           &kp N    &kp E     &kp I   &kp O       &tp RCTRL SQT
   &kp LSHFT      &kp Z &kp X &kp C    &kp V   &kp B         &kp K           &kp M    &kp COMMA &kp DOT &kp FSLH    &kp RSHFT
                         &kp LGUI &mo NUM &tp LALT RET  &tp RALT SPACE  &kp BSPC &mo FUNC
                        >;
                };

                num_layer {
                        label = "NUM";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |    %    |   |    ^    |  &  |  (  |  )  |  *  |      \    |
// | CTRL |  1  |  2  |  3  |  4  |    5    |   |    -    |  =  |  {  |  }  |  `  | RCTRL/"|" |
// | SHFT |  6  |  7  |  8  |  9  |    0    |   |    _    |  +  |  [  |  ]  |  ~  |    RSHFT  |
//                    | GUI |     | ALT/ENT |   | ALT/SPC | BKSP|     |
                        bindings = <
   &kp TAB   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT     &kp CARET       &kp AMPS  &kp LPAR &kp RPAR &kp KP_MULTIPLY &kp BSLH
   &kp LCTRL &kp N1   &kp N2 &kp N3   &kp N4   &kp N5        &kp MINUS       &kp EQUAL &kp LBRC &kp RBRC &kp GRAVE       &tp RCTRL PIPE
   &kp LSHFT &kp N6   &kp N7 &kp N8   &kp N9   &kp N0        &kp UNDER       &kp PLUS  &kp LBKT &kp RBKT &kp TILDE       &kp RSHFT
                             &kp LGUI &trans   &tp LALT RET  &tp RALT SPACE  &kp BSPC  &trans
                        >;
                };

                func_layer {
                        label = "FUNC";
// -----------------------------------------------------------------------------------------
// |   F1  |  F2  |  F3  |  F4   |  F5   | F6         |   |  F7  |  F8   |   F9  |  F10  |  F11  |  F12        |
// |       | Prev | Next | Vol - | Vol + | Play/Pause |   | HOME |  LFT  |  DWN  |  UP   |  RGT  |  RCTRL/END  |
// |       |      |      |       |       |            |   | INS  |  DEL  | PG_DN | PG_UP |       |             |
//                       |       |       |            |   |      |       |       |
                        bindings = <
   &kp F1     &kp F2        &kp F3       &kp F4       &kp F5       &kp F6        &kp F7   &kp F8   &kp F9    &kp F10   &kp F11   &kp F12
   &trans     &kp C_PREV    &kp C_NEXT   &kp C_VOL_DN &kp C_VOL_UP &kp C_PP      &kp HOME &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &tp RCTRL END
   &trans     &trans        &trans       &trans       &trans       &trans        &kp INS  &kp DEL  &kp PG_DN &kp PG_UP &trans    &trans
                          	         &trans       &trans       &trans        &trans   &trans   &trans
                        >;
                };

                sys_layer {
                        label = "SYS";
// -----------------------------------------------------------------------------------------
// |       |      |      |       |       |            |   |      |       |       |       |       |       |
// |       |      |      |       |       |            |   |      |       |       |       |       |       |
// | BTCLR | BT1  | BT2  | BT3   | BT4   | BT5        |   |      |       |       |       |       |       |
//                       |       |       |            |   |      |       |       |
                        bindings = <
   &trans     &trans        &trans       &trans       &trans       &trans        &trans   &trans   &trans    &trans   &trans   &trans
   &trans     &trans        &trans       &trans       &trans       &trans        &trans   &trans   &trans    &trans   &trans   &trans
   &bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &trans   &trans   &trans    &trans   &trans   &trans
                          	         &trans       &trans       &trans        &trans   &trans   &trans
                        >;
                };
        };
};
